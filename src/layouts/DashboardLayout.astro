---
import "../assets/app.css";
import { ClientRouter } from "astro:transitions";
import { fade } from "astro:transitions";
const { slots, background } = Astro.props;
const year = new Date().getFullYear();
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta
      name="description"
      content="Descubre cómo las diversas opciones gráficas en los videojuegos afectan el rendimiento y tu hardware, y analiza su impacto real en tu experiencia de juego."
    />
    <ClientRouter />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <title>Guía de Rénder Gaming</title>
  </head>
  <body class="h-screen">
    <div class="drawer lg:drawer-open h-screen">
      <input id="drawer-indice" type="checkbox" class="drawer-toggle" />

      <!-- Contenido principal -->
      <div class="drawer-content flex flex-col h-screen">
        <!-- Botón hamburguesa flotante en móviles -->
        <label
          for="drawer-indice"
          class="btn btn-neutral drawer-button lg:hidden fixed top-4 left-4 z-50"
          aria-label="Abrir menú de navegación"
        >
          ☰
        </label>

        <header class="sr-only">
          <h2>Guía de Rénder Gaming</h2>
        </header>

        <!-- Contenedor central con scroll interno, El props para mostrar un fondo en cada página y en la página se usa DashboardLayout background="bg-ambient" para mostrar el fondo asociado a una regla css -->
        <main
          id="contenido"
          class={`flex-1 overflow-y-auto bg-base-100 ${background ?? ""}`}
          transition:animate={fade({ duration: "0.5s" })}
        >
          <slot />
        </main>

        <!-- Footer fijo -->
        <footer class="bg-base-300 text-center p-4 text-xs text-base-content/70" aria-label="Información del sitio">
          <div class="flex justify-center items-center gap-2">
            <span>© {year} Guía de Rénder Gaming - Creado por:</span>
            <span id="miFirma" class="text-base" style="font-size: 22px;">Daniel Bautista Pradilla</span>
            -
            <!-- Enlace a GitHub -->
            <a
              href="https://github.com/Danielbp019"
              target="_blank"
              rel="noopener noreferrer"
              aria-label="Perfil de GitHub de Daniel Bautista Pradilla"
              class="hover:text-primary transition-colors"
            >
              <i class="bi bi-github text-xl align-middle"></i>
            </a>
          </div>
        </footer>
      </div>

      <!-- Sidebar -->
      <div class="drawer-side">
        <label for="drawer-indice" class="drawer-overlay">
          <span class="sr-only">Cerrar menú lateral</span>
        </label>

        <aside class="bg-base-200 p-4 h-screen overflow-y-auto w-78">
          <!-- Contenedor para botones y tema -->
          <div class="flex flex-col items-center gap-2 mt-10 mb-4">
            <!-- Botones fijos arriba -->
            <div class="join join-horizontal">
              <a href="/" class="btn btn-primary join-item"
                ><i class="bi bi-house-fill" aria-hidden="true"></i> Inicio</a
              >
              <a href="/temas/" class="btn btn-secondary join-item"
                ><i class="bi bi-stars" aria-hidden="true"></i> Temas</a
              >
            </div>
            <!-- Texto de tema activo -->
            <div id="tema-activo" class="text-center text-sm font-semibold">
              Tema activo: <i class="bi bi-stars text-warning" aria-hidden="true"></i><span id="tema-nombre">dim</span>
            </div>
          </div>
          <hr />

          <!-- Buscador -->
          <div class="join py-4">
            <label for="searchInput" class="input join-item">
              <svg class="h-[1em] opacity-50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <g stroke-linejoin="round" stroke-linecap="round" stroke-width="2.5" fill="none" stroke="currentColor">
                  <circle cx="11" cy="11" r="8"></circle>
                  <path d="m21 21-4.3-4.3"></path>
                </g>
              </svg>
              <span class="sr-only">Buscar</span>
              <input id="searchInput" type="search" required placeholder="Buscar Tema" aria-label="Search field" />
            </label>
            <button class="btn btn-neutral join-item">Buscar</button>
          </div>

          <!-- Menu de la web -->
          <nav aria-label="Menú principal">
            <slot name="sidebar" />
          </nav>
        </aside>
      </div>
    </div>

    <!-- Script para gestionar el tema con Astro View Transitions -->
    <script is:inline>
      // Función para aplicar el tema y actualizar la UI
      function applyTheme() {
        const storedTheme = localStorage.getItem("theme") || "dim";
        const currentTheme = document.documentElement.getAttribute("data-theme");

        // Solo actualiza el atributo si el tema ha cambiado.
        // Esto es CRUCIAL para evitar el bucle infinito con el MutationObserver.
        if (storedTheme !== currentTheme) {
          document.documentElement.setAttribute("data-theme", storedTheme);
        }

        const themeNameElement = document.getElementById("tema-nombre");
        if (themeNameElement) {
          themeNameElement.textContent = storedTheme;
        }
      }

      // 1. Aplicar el tema inmediatamente en la carga inicial para evitar FOUC.
      applyTheme();

      // 2. Escuchar el evento de Astro para aplicar el tema en cada navegación del cliente.
      document.addEventListener("astro:page-load", applyTheme);

      // 3. Observar cambios si el tema se cambia dinámicamente (ej: con un selector de temas).
      new MutationObserver(applyTheme).observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["data-theme"],
      });
    </script>
  </body>
</html>
