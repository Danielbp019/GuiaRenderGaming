---
import "../assets/app.css";
const { slots, background } = Astro.props;
const year = new Date().getFullYear();
---

<html lang="es" data-theme="dim">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta
      name="description"
      content="Descubre cómo las diversas opciones gráficas en los videojuegos afectan el rendimiento y tu hardware, y analiza su impacto real en tu experiencia de juego."
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <!-- 180×180 px -->
    <title>Guía de Rénder Gaming</title>
    <script is:inline>
      // Al cargar la página, aplicar el tema guardado
      const theme = localStorage.getItem("theme");
      if (theme) {
        document.documentElement.setAttribute("data-theme", theme);
      }
    </script>
  </head>
  <body class="h-screen">
    <div class="drawer lg:drawer-open h-screen">
      <input id="drawer-indice" type="checkbox" class="drawer-toggle" />

      <!-- Contenido principal -->
      <div class="drawer-content flex flex-col h-screen">
        <!-- Botón hamburguesa flotante en móviles -->
        <label
          for="drawer-indice"
          class="btn btn-neutral drawer-button lg:hidden fixed top-4 left-4 z-50"
          aria-label="Abrir menú de navegación"
        >
          ☰
        </label>

        <header class="sr-only">
          <h2>Guía de Rénder Gaming</h2>
        </header>

        <!-- Contenedor central con scroll interno, El props para mostrar un fondo en cada página y en la página se usa DashboardLayout background="bg-ambient" para mostrar el fondo asociado a una regla css -->
        <main id="contenido" class={`flex-1 overflow-y-auto bg-base-100 ${background ?? ""}`}>
          <slot />
        </main>

        <!-- Footer fijo -->
        <footer class="bg-base-300 text-center p-4 text-xs text-base-content/70" aria-label="Información del sitio">
          <div class="flex justify-center items-center gap-2">
            <span>© {year} Guía de Rénder Gaming - Creado por:</span>
            <span id="miFirma" class="text-base" style="font-size: 22px;">Daniel Bautista Pradilla</span>
            -
            <!-- Enlace a GitHub -->
            <a
              href="https://github.com/Danielbp019"
              target="_blank"
              rel="noopener noreferrer"
              aria-label="Perfil de GitHub de Daniel Bautista Pradilla"
              class="hover:text-primary transition-colors"
            >
              <i class="bi bi-github text-xl align-middle"></i>
            </a>
          </div>
        </footer>
      </div>

      <!-- Sidebar -->
      <div class="drawer-side">
        <label for="drawer-indice" class="drawer-overlay">
          <span class="sr-only">Cerrar menú lateral</span>
        </label>

        <aside class="bg-base-200 p-4 h-screen overflow-y-auto">
          <br />
          <!-- Botones fijos arriba -->
          <div class="flex justify-center gap-2 mb-2 join join-horizontal">
            <a href="/" class="btn btn-primary join-item"><i class="bi bi-house-fill" aria-hidden="true"></i> Inicio</a>
            <a href="/temas" class="btn btn-secondary join-item"><i class="bi bi-stars" aria-hidden="true"></i> Temas</a
            >
          </div>

          <!-- Texto de tema activo -->
          <div id="tema-activo" class="text-center text-sm font-semibold mb-4">
            Tema activo:
            <i class="bi bi-stars text-warning" aria-hidden="true"></i><span id="tema-nombre">dim</span>
          </div>
          <hr />
          <br />
          <nav aria-label="Menú principal">
            <slot name="sidebar" />
          </nav>
        </aside>
      </div>
    </div>

    <!-- Script para actualizar el texto del tema activo -->
    <script is:inline>
      function actualizarTemaActivo() {
        const tema = document.documentElement.getAttribute("data-theme") || "dim";
        document.getElementById("tema-nombre").textContent = tema;
      }

      // Inicializar al cargar
      actualizarTemaActivo();

      // Observar cambios en el atributo data-theme
      const observer = new MutationObserver(actualizarTemaActivo);
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["data-theme"],
      });
    </script>
  </body>
</html>
